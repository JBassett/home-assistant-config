- alias: '[TTS] Movie Downloaded'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: PLEX_EVENT
      event_data:
        status: NEW
  condition:
    - condition: time
      after: '07:00:00'
      before: '23:00:00'
    - condition: template
      value_template: "{{ trigger.event.data['Metadata']['librarySectionTitle'] == 'Movies' }}"
    # Make sure we aren't already watching something on the tv
    - condition: template
      value_template: "{{ states.media_player.living_room_tv.state != 'playing' }}"
    # Make sure we aren't already watching something on the home
    - condition: template
      value_template: "{{ states.media_player.living_room_speaker.state != 'playing' }}"
  action:
  - service: tts.google_translate_say
    entity_id: media_player.living_room_speaker
    data_template:
      message: "Get the popcorn ready, I just downloaded {{ trigger.event.data['Metadata']['title'] }}."

- alias: '[TTS] New TV Episode'
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: PLEX_EVENT
    event_data:
      status: NEW
  condition:
    - condition: time
      after: '07:00:00'
      before: '23:00:00'
    - condition: template
      value_template: "{{ trigger.event.data['Metadata']['librarySectionTitle'] == 'TV' }}"
    # Make sure we aren't already watching something on the tv
    - condition: template
      value_template: "{{ states.media_player.living_room_tv.state != 'playing' }}"
    # Make sure we aren't already watching something on the home
    - condition: template
      value_template: "{{ states.media_player.living_room_speaker.state != 'playing' }}"
  action:
  - service: tts.google_translate_say
    entity_id: media_player.living_room_speaker
    data_template:
      message: "Good news, I downloaded a new episode of {{ trigger.event.data['Metadata']['title'] }}."

- alias: '[TTS] New Music Album'
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: PLEX_EVENT
    event_data:
      status: NEW
  condition:
    - condition: time
      after: '07:00:00'
      before: '23:00:00'
    - condition: template
      value_template: "{{ trigger.event.data['Metadata']['librarySectionTitle'] == 'Music' }}"
    # Make sure we aren't already watching something on the tv
    - condition: template
      value_template: "{{ states.media_player.plex_xboxone.state != 'playing' }}"
    # Make sure we aren't already watching something on the home
    - condition: template
      value_template: "{{ states.media_player.living_room_speaker.state != 'playing' }}"
  action:
  - service: tts.google_translate_say
    entity_id: media_player.living_room_speaker
    data_template:
      message: "Music to my ears, {{ trigger.event.data['album'] }} by {{ trigger.event.data['artist'] }} is ready for a listen."
