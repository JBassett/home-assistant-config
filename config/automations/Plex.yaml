- alias: '[TTS] Movie Downloaded'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: PLEX_EVENT
      event_data:
        status: GRABBED
        type: movie
  condition:
    - condition: time
      after: '07:00:00'
      before: '23:00:00'
    # Make sure we aren't already watching something on the home
    - condition: state
      entity_id: media_player.kitchen_display
      state: 'off'
  action:
  - service: tts.google_translate_say
    entity_id: media_player.kitchen_display
    data_template:
      message: "Get the popcorn ready, I just downloaded {{ trigger.event.data['Metadata']['title'] }}."

- alias: '[TTS] New TV Episode'
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: PLEX_EVENT
    event_data:
      status: GRABBED
      type: episode
  condition:
    - condition: time
      after: '07:00:00'
      before: '23:00:00'
    # Make sure we aren't already watching something on the home
    - condition: state
      entity_id: media_player.kitchen_display
      state: 'off'
  action:
  - service: tts.google_translate_say
    entity_id: media_player.kitchen_display
    data_template:
      message: "Good news, I downloaded a new episode of {{ trigger.event.data['Metadata']['grandparentTitle'] }}."

- alias: '[TTS] New Music Album'
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: PLEX_EVENT
    event_data:
      status: GRABBED
      type: track
  condition:
    - condition: time
      after: '07:00:00'
      before: '23:00:00'
    # Make sure we aren't already watching something on the home
    - condition: state
      entity_id: media_player.kitchen_display
      state: 'off'
  action:
  - service: tts.google_translate_say
    entity_id: media_player.kitchen_display
    data_template:
      message: "Music to my ears, {{ trigger.event.data['album'] }} by {{ trigger.event.data['artist'] }} is ready for a listen."
